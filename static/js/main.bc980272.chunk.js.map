{"version":3,"sources":["reportWebVitals.js","index.js","App.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById","useState","result","setResult","clear","sign","percentage","handleClick","e","target","name","calculate","eval","err","className","type","value","onClick","id"],"mappings":"sLAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAA,EAAD,MAEFC,SAASC,eAAe,SAM1Bd,K,4vBCZA,SAASY,MACP,cAA4BG,oDAAS,IAArC,gLAAOC,OAAP,cAAeC,UAAf,cAEMC,MAAQ,WACZD,UAAU,KAMNE,KAAO,WACXF,WAAsB,EAAXD,SAGPI,WAAa,WACjBH,UAAUD,OAAO,IAAI,MAGjBK,YAAc,SAACC,GACnBL,UAAUD,OAASM,EAAEC,OAAOC,OAGxBC,UAAY,SAAZA,YACJ,IACER,UAAUS,KAAKV,SAChB,MAAOW,KACNV,UAAU,WAId,OACE,6HACE,mEAAKW,UAAW,YAAhB,UACE,4EACE,oEAAOC,KAAK,OAAOC,MAAOd,WAG5B,mEAAKY,UAAU,SAAf,UACE,qEAAQG,QAASb,MAAOU,UAAU,OAAOI,GAAG,QAA5C,gBACA,qEAAQD,QAASZ,KAAMS,UAAU,OAAOI,GAAG,YAA3C,kBACA,qEAAQR,KAAK,IAAIO,QAASX,WAAYQ,UAAU,OAAhD,eACA,qEAAQJ,KAAK,IAAIO,QAASV,YAAaO,UAAU,SAAjD,kBACA,qEAAQJ,KAAK,IAAIO,QAASV,YAA1B,eACA,qEAAQG,KAAK,IAAIO,QAASV,YAA1B,eACA,qEAAQG,KAAK,IAAIO,QAASV,YAA1B,eACA,qEAAQG,KAAK,IAAIO,QAASV,YAAaO,UAAU,SAAjD,eACA,qEAAQJ,KAAK,IAAIO,QAASV,YAA1B,eACA,qEAAQG,KAAK,IAAIO,QAASV,YAA1B,eACA,qEAAQG,KAAK,IAAIO,QAASV,YAA1B,eACA,qEAAQG,KAAK,IAAIO,QAASV,YAAaO,UAAU,SAAjD,eACA,qEAAQJ,KAAK,IAAIO,QAASV,YAA1B,eACA,qEAAQG,KAAK,IAAIO,QAASV,YAA1B,eACA,qEAAQG,KAAK,IAAIO,QAASV,YAA1B,eACA,qEAAQG,KAAK,IAAIO,QAASV,YAAaO,UAAU,SAAjD,eACA,qEAAQJ,KAAK,IAAIO,QAASV,YAAaW,GAAG,OAA1C,eACA,qEAAQR,KAAK,IAAIO,QAASV,YAA1B,eACA,qEAAQU,QAASN,UAAWG,UAAU,SAAtC,uBAOKhB,4B","file":"static/js/main.bc980272.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React, { useState } from 'react';\nimport './App.css'\n\nfunction App() {\n  const [result, setResult] = useState('')\n\n  const clear = () => {\n    setResult('')\n  }\n  // const backspace = () => {\n  //   setResult(result.slice(0,-1))\n  // }\n  \n  const sign = () => {\n    setResult((result * (-1)))\n  }\n\n  const percentage = () => {\n    setResult(result/100+'*')\n  }\n\n  const handleClick = (e) => {\n    setResult(result +(e.target.name));\n  } \n\n  const calculate = () => {\n    try {\n      setResult(eval(result));\n    }catch (err){\n      setResult('Error')\n    }\n  }\n\n  return (\n    <>\n      <div className= \"container\">\n        <form>\n          <input type=\"text\" value={result} />\n        </form>\n\n        <div className=\"keypad\">\n          <button onClick={clear} className=\"gray\" id=\"clear\">AC</button>\n          <button onClick={sign} className=\"gray\" id=\"backspace\">Â±</button>\n          <button name=\"%\" onClick={percentage} className=\"gray\">%</button>\n          <button name=\"/\" onClick={handleClick} className=\"yellow\">&divide;</button>\n          <button name=\"7\" onClick={handleClick}>7</button>\n          <button name=\"8\" onClick={handleClick}>8</button>\n          <button name=\"9\" onClick={handleClick}>9</button>\n          <button name=\"*\" onClick={handleClick} className=\"yellow\">x</button>\n          <button name=\"4\" onClick={handleClick}>4</button>\n          <button name=\"5\" onClick={handleClick}>5</button>\n          <button name=\"6\" onClick={handleClick}>6</button>\n          <button name=\"-\" onClick={handleClick} className=\"yellow\">-</button>\n          <button name=\"1\" onClick={handleClick}>1</button>\n          <button name=\"2\" onClick={handleClick}>2</button>\n          <button name=\"3\" onClick={handleClick}>3</button>\n          <button name=\"+\" onClick={handleClick} className=\"yellow\">+</button>\n          <button name=\"0\" onClick={handleClick} id=\"zero\">0</button>\n          <button name=\".\" onClick={handleClick}>.</button>\n          <button onClick={calculate} className=\"yellow\">=</button>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"sourceRoot":""}